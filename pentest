#!/usr/bin/env python

# Usage ./pentest host testname interface

import sys
from pwn import *
import subprocess
import nmap
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--host', action='store')
parser.add_argument('--project', action='store')

if not len(sys.argv) > 1:
	parser.print_help()
	exit()

args = parser.parse_args()

host = args.host
project = args.project
cmd = "-sV localhost"

print "Pentest Framework, by @porthunter"

def createFileSystem():
	print "[i] Creating Filesystem for "+project
	subprocess.call(["mkdir", "tests/"+project])
	subprocess.call(["mkdir", "tests/"+project+"/exploits"])
	subprocess.call(["mkdir", "tests/"+project+"/exploits/potential"])
	subprocess.call(["mkdir", "tests/"+project+"/exploits/failed"])
	subprocess.call(["mkdir", "tests/"+project+"/exploits/successful"])
	subprocess.call(["touch", "tests/"+project+"/exploits/custom-exploit.py"])
	subprocess.call(["mkdir", "tests/"+project+"/scripts"])
	subprocess.call(["mkdir", "tests/"+project+"/output"])
	subprocess.call(["mkdir", "tests/"+project+"/dumps"])
	subprocess.call(["mkdir", "tests/"+project+"/osint"])
	subprocess.call(["mkdir", "tests/"+project+"/se"])
	subprocess.call(["mkdir", "tests/"+project+"/creds"])
	subprocess.call(["mkdir", "tests/"+project+"/screenshots"])
	subprocess.call(["touch", "tests/"+project+"/log.txt"])
	subprocess.call(["touch", "tests/"+project+"/notes.txt"])
	subprocess.call(["touch", "tests/"+project+"/creds/passwords.txt"])
	subprocess.call(["touch", "tests/"+project+"/creds/users.txt"])
	subprocess.call(["touch", "tests/"+project+"/creds/hashes.txt"])
	subprocess.call(["touch", "tests/"+project+"/IPs.txt"])
	subprocess.call(["touch", "tests/"+project+"/hosts.txt"])


def createScripts():
	print "[i] Creating Scripts for "+project

def nmapScan(hostToScan):
	print "[i] Running Nmap Scan"
	nm = nmap.PortScanner()
	nmapscan = nm.scan(hosts=hostToScan, arguments='-sC -sV -O -oN '+hostToScan)
	for host in nm.all_hosts():
		print('----------------------------------------------------')
		print('Host : %s (%s)' % (host, nm[host].hostname()))
		print('State : %s' % nm[host].state())

def ncConnect():
	print "1"

def createMetasploitHandlerScript(payload, lhost, lport):
	script = "use exploit/multi/handler\n"
	script += "set PAYLOAD "+payload+"\n"
	script += "set LHOST "+lhost+"\n"
	script += "set LPORT "+lport+"\n"
	script += "set ExitOnSession false\n"
	script += "exploit -j -z"
	print script

createFileSystem()
createScripts()
nmapScan(host)
createMetasploitHandlerScript("php/meterpreter/reverse_tcp", "10.10.10.12", "1337")
